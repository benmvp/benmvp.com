{"version":3,"sources":["webpack:///./node_modules/date-fns/esm/differenceInMilliseconds/index.js","webpack:///./node_modules/date-fns/esm/addDays/index.js","webpack:///./node_modules/date-fns/esm/isPast/index.js","webpack:///./src/utils/talk.ts","webpack:///./src/utils/speaking-engagement.ts","webpack:///./node_modules/@material-ui/icons/esm/ExpandMore.js"],"names":["TALKS_LOOKUP","TALKS","getTalks","getTalk","id","getEngagements","all","SPEAKING_ENGAGEMENTS","map","speakInfo","slugify","name","talks","talk","date","formatDate","sort","engagementA","engagementB","_engagementB$talks","_engagementA$talks","differenceInMilliseconds","Date","parse","future","filter","_ref","some","_ref2","isFuture","addDays","reverse","past","_ref3","_ref4","isPast"],"mappings":"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","file":"f7e12f81dcb4e1e0953dd9d84477046cd723cdf4-1de45f8e75a439b7c548.js","sourcesContent":["import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport default function differenceInMilliseconds(dateLeft, dateRight) {\n  requiredArgs(2, arguments);\n  return toDate(dateLeft).getTime() - toDate(dateRight).getTime();\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isPast\n * @category Common Helpers\n * @summary Is the given date in the past?\n * @pure false\n *\n * @description\n * Is the given date in the past?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the past\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 2 July 2014 in the past?\n * const result = isPast(new Date(2014, 6, 2))\n * //=> true\n */\nexport default function isPast(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getTime() < Date.now();\n}","import TALKS from '../../content/pages/talks.json'\n\nexport interface Talk {\n  categories: string[]\n  description: string\n  title: string\n  retired?: boolean\n}\n\nconst TALKS_LOOKUP = TALKS as Record<string, Talk>\n\nexport const getTalks = () => TALKS_LOOKUP\nexport const getTalk = (id: string) => getTalks()[id]\n","import slugify from 'slugify'\nimport { isFuture, isPast, differenceInMilliseconds, addDays } from 'date-fns'\nimport { formatDate } from '.'\nimport { getTalk, Talk } from './talk'\n\nimport SPEAKING_ENGAGEMENTS from '../../content/pages/speaking-engagements.json'\n\nexport interface EngagementTalk extends Partial<Talk> {\n  date: string\n  id?: string\n  title: string\n  links?: { label: string; url: string }[]\n  room?: string\n  time?: string\n}\n\nexport interface SpeakingEngagement {\n  id: string\n  name: string\n  url: string\n  isCancelled?: boolean\n  location: string\n  talks: EngagementTalk[]\n  venue?: string\n}\n\nexport const getEngagements = () => {\n  const all: SpeakingEngagement[] = SPEAKING_ENGAGEMENTS.map((speakInfo) => ({\n    ...speakInfo,\n    id: slugify(speakInfo.name),\n    talks: speakInfo.talks.map((talk) => {\n      return {\n        ...getTalk(talk.id),\n        id: talk.id,\n        ...talk,\n        date: formatDate(talk.date),\n      }\n    }),\n  })).sort((engagementA, engagementB) =>\n    differenceInMilliseconds(\n      Date.parse(engagementB?.talks?.[0].date),\n      Date.parse(engagementA?.talks?.[0].date),\n    ),\n  )\n  const future = all\n    .filter(({ talks }) =>\n      talks?.some(({ date }) => isFuture(addDays(Date.parse(date), 1))),\n    )\n    .reverse()\n  const past = all.filter(({ talks }) =>\n    talks?.some(({ date }) => isPast(addDays(Date.parse(date), 1))),\n  )\n\n  return { all, future, past }\n}\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');"],"sourceRoot":""}