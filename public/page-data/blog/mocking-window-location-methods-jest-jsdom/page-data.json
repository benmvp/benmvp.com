{"componentChunkName":"component---src-templates-post-tsx","path":"/blog/mocking-window-location-methods-jest-jsdom/","result":{"data":{"post":{"html":"<p>Well it looks like I’m going to continue my streak about sharing helpful tips around JavaScript testing in <a href=\"https://jestjs.io/en/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Jest</a>. Previously I shared about avoiding gotchas while <a href=\"/blog/quick-trick-jest-asynchronous-tests/\">testing async JavaScript code</a> and specifically how to <a href=\"/blog/asynchronous-testing-with-enzyme-react-jest/\">write tests for async React components</a> in Jest.</p>\n<p>This time I want to talk about how to <strong><a href=\"https://jestjs.io/docs/en/mock-functions#using-a-mock-function\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">mock</a> methods on <code class=\"language-text\">window.location</code></strong>, such as <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Location/assign\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">window.location.assign</code></a>, in Jest. If you didn’t already know, Jest uses <a href=\"https://github.com/jsdom/jsdom\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">jsdom</code></a> as its <a href=\"https://jestjs.io/docs/en/configuration#testenvironment-string\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">test environment</a> which provides a JavaScript implementation of many web standards for use within Node. It allows us to access objects like <code class=\"language-text\">window.location</code> which normally wouldn’t exist in a Node environment.</p>\n<p>Let’s say, I have a React component that makes a <code class=\"language-text\">window.fetch</code> call and then redirects the user to a new page. Not only do I want to mock <code class=\"language-text\">window.fetch</code> and ensure that the right API request was made, but I also need to verify that the component calls <code class=\"language-text\">window.location.assign</code> with the correct URL.</p>\n<p>In the past in Jest, I could mock out <code class=\"language-text\">window.location.assign</code> using <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">Object.defineProperty</code></a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\">Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">,</span> <span class=\"token string\">'assign'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  configurable<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  value<span class=\"token operator\">:</span> jest<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>and then run assertions on <code class=\"language-text\">window.location.assign</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>assign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHaveBeenCalledTimes</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>assign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHaveBeenCalledWith</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'https://www.benmvp.com/minishops/'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>However, when I was recently upgraded a repo from Jest 23 to Jest 26, this no longer worked. It turns out that <strong>Jest 25+ uses a newer version of <code class=\"language-text\">jsdom</code></strong> that uses a newer implementation of the <code class=\"language-text\">Location</code> object that prevents you from modifying <code class=\"language-text\">window.location</code>. Usually <code class=\"language-text\">Object.defineProperty</code> works for everything, but the <code class=\"language-text\">Location</code> object is completely locked down from changes.</p>\n<p>While scouring the internet, I found suggestions to delete <code class=\"language-text\">window.location</code> and create an object with just the methods I need to mock. Something like:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">delete</span> window<span class=\"token punctuation\">.</span>location\n\nwindow<span class=\"token punctuation\">.</span>location <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  assign<span class=\"token operator\">:</span> jest<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>In general, this works, and is what I began to use while fixing the tests during the upgrade. But I had a specific component where not only was it calling <code class=\"language-text\">window.location.assign</code>, but it was also reading <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Location/search\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">window.location.search</code></a>. The code was setting the mock URL with a query string using <a href=\"https://github.com/jsdom/jsdom#reconfiguring-the-jsdom-with-reconfiguresettings\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">global.jsdom.reconfigure</code></a> (via <a href=\"https://github.com/simon360/jest-environment-jsdom-global\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">jest-environment-jsdom-global</code></a>):</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\">global<span class=\"token punctuation\">.</span>jsdom<span class=\"token punctuation\">.</span><span class=\"token function\">reconfigure</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  url<span class=\"token operator\">:</span> <span class=\"token string\">'https://www.benmvp.com/minishops/?utm_source=twitter'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>So my first thought was to move the query string from <code class=\"language-text\">reconfigure</code> to <code class=\"language-text\">search</code> of the faux-<code class=\"language-text\">Location</code> object:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\">global<span class=\"token punctuation\">.</span>jsdom<span class=\"token punctuation\">.</span><span class=\"token function\">reconfigure</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  url<span class=\"token operator\">:</span> <span class=\"token string\">'https://www.benmvp.com/minishops/'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nwindow<span class=\"token punctuation\">.</span>location <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  assign<span class=\"token operator\">:</span> jest<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// probably not the best idea</span>\n  search<span class=\"token operator\">:</span> <span class=\"token string\">'?utm_source=twitter'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>But <code class=\"language-text\">window.location.search</code> always has a value (even if it’s <code class=\"language-text\">&#39;&#39;</code>), and this just felt like I was <strong>digging too deep into the implementation details</strong>. Plus what if I needed <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Location/hash\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">window.location.hash</code></a> (or any of the other properties) in other tests? Many of the properties of the <code class=\"language-text\">Location</code> object get parsed and set from changing the URL. I’ll likely need that functionality, so this didn’t feel like a robust enough mocking solution.</p>\n<p>So I kept researching. I basically wanted to create an object that looked and acted <em>just</em> like the <code class=\"language-text\">Location</code> object, but would allow me to mock <code class=\"language-text\">assign</code>, <code class=\"language-text\">reload</code> or any other method. Attempts to clone the object using <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax#Spread_in_object_literals\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">object spread</a> or <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">Object.assign</code></a> resulted in the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/set\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">property setters</a> of properties like <code class=\"language-text\">window.location.search</code> getting removed. It’s basically how <code class=\"language-text\">Object.assign</code> works. I’d lose the internal logic of the <code class=\"language-text\">Location</code> object.</p>\n<p>Then I stumbled across <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptors\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">Object.getOwnPropertyDescriptors</code></a>. It returns all of the descriptors for a given object. So it maintains the getters/setters of the <code class=\"language-text\">Location</code> object as well as its methods. And then there is also <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperties\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">Object.defineProperties</code></a> that defines new or <strong>modifies existing properties on an object</strong> (and also returns the object). So the plan was to get all of the property descriptors for <code class=\"language-text\">window.location</code> and create a new object with the mocked method(s) replaced.</p>\n<p>This is what it turned into:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token comment\">// keep a copy of the window object to restore</span>\n<span class=\"token comment\">// it at the end of the tests</span>\n<span class=\"token keyword\">const</span> oldWindowLocation <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>location\n\n<span class=\"token comment\">// delete the existing `Location` object from `jsdom`</span>\n<span class=\"token keyword\">delete</span> window<span class=\"token punctuation\">.</span>location\n\n<span class=\"token comment\">// create a new `window.location` object that's *almost*</span>\n<span class=\"token comment\">// like the real thing</span>\nwindow<span class=\"token punctuation\">.</span>location <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperties</span><span class=\"token punctuation\">(</span>\n  <span class=\"token comment\">// start with an empty object on which to define properties</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// grab all of the property descriptors for the</span>\n    <span class=\"token comment\">// `jsdom` `Location` object</span>\n    <span class=\"token operator\">...</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">getOwnPropertyDescriptors</span><span class=\"token punctuation\">(</span>oldWindowLocation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">// overwrite a mocked method for `window.location.assign`</span>\n    assign<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      configurable<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      value<span class=\"token operator\">:</span> jest<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">// more mocked methods here as needed</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>So this new <code class=\"language-text\">window.location</code> object isn’t a true <code class=\"language-text\">Location</code> object. So I’m sure it’s missing <em>some</em> functionality. But it’s pretty close. After the change, all of my existing tests using <code class=\"language-text\">global.jsdom.reconfigure()</code> still worked, but I was also able to run tests mocking <code class=\"language-text\">window.location.assign()</code>.</p>\n<p>A complete test would look like:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> oldWindowLocation <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>location\n\n<span class=\"token function\">beforeAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">delete</span> window<span class=\"token punctuation\">.</span>location\n\n  window<span class=\"token punctuation\">.</span>location <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperties</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">...</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">getOwnPropertyDescriptors</span><span class=\"token punctuation\">(</span>oldWindowLocation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      assign<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        configurable<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        value<span class=\"token operator\">:</span> jest<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>assign<span class=\"token punctuation\">.</span><span class=\"token function\">mockReset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">afterAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// restore `window.location` to the `jsdom` `Location` object</span>\n  window<span class=\"token punctuation\">.</span>location <span class=\"token operator\">=</span> oldWindowLocation\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'it calls assign with expected URL'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.benmvp.com/minishops/'</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>assign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHaveBeenCalledTimes</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>assign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHaveBeenCalledWith</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">'https://www.benmvp.com/minishops/'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>I had a number of test files that needed this mocking of <code class=\"language-text\">window.location.assign</code>. Instead of duplicating the mocking code or creating a helper function, that tests would call, I elected to just have <strong>every test use the mocked <code class=\"language-text\">window.location</code> object</strong>. I couldn’t foresee a use case where I’d actually want it to navigate the page in a test (plus it doesn’t work anyway). So I took it one step further, and using the <a href=\"https://jestjs.io/docs/en/configuration#setupfilesafterenv-array\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">setupFilesAfterEnv</code></a> configuration in <a href=\"https://jestjs.io/docs/en/configuration\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">jest.config.js</code></a>, I added a file that looked like:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token comment\">// jest-setup.js</span>\n\n<span class=\"token keyword\">const</span> oldWindowLocation <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>location\n\n<span class=\"token function\">beforeAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">delete</span> window<span class=\"token punctuation\">.</span>location\n\n  window<span class=\"token punctuation\">.</span>location <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperties</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">...</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">getOwnPropertyDescriptors</span><span class=\"token punctuation\">(</span>oldWindowLocation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      assign<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        configurable<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        value<span class=\"token operator\">:</span> jest<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">afterAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// restore `window.location` to the original `jsdom`</span>\n  <span class=\"token comment\">// `Location` object</span>\n  window<span class=\"token punctuation\">.</span>location <span class=\"token operator\">=</span> oldWindowLocation\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>I left out the <code class=\"language-text\">beforeEach()</code> in the setup file. A test file or even a given test case can handle the mock resetting.</p>\n<p>Hopefully this helps you out! It certainly would’ve saved me a couple of days of toiling trying to find an answer. 🙃 Feel free to let me know what you think on Twitter at <a href=\"https://twitter.com/benmvp\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@benmvp</a>.</p>\n<p>Keep learning my friends. 🤓</p>","excerpt":"Well it looks like I’m going to continue my streak about sharing helpful tips around JavaScript testing in Jest. Previously I shared about…","timeToRead":6,"wordCount":{"words":692},"fields":{"slug":"/mocking-window-location-methods-jest-jsdom/"},"frontmatter":{"title":"Mocking window.location methods in Jest & jsdom","shortDescription":"A way to successfully mock the locked Location object from jsdom in Jest","tags":["mock","react"],"category":"Testing","date":"August 06, 2020","dateIso":"2020-08-06"}},"categoryPosts":{"edges":[{"node":{"id":"50cc6858-db34-5dd3-a35e-0d2cb24388dd","frontmatter":{"title":"A quick trick for Jest asynchronous tests","shortDescription":"A small configuration you can add to Jest to reduce false positives for async tests","tags":["async","await","promises"],"date":"July 29, 2020","hero":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='189'%20viewBox='0%200%20400%20189'%20preserveAspectRatio='none'%3e%3cpath%20d='M115%201v2l-1%203c-3%202-2%203%200%203h2l2%202%202%201%206%203%205%201-3%202a827%20827%200%2001-13%209%203573%203573%200%200144-27l-5%201h-2c-2-1-12-1-15%201l-2-1-10-1-10%201m134%200l1%201h6l32%201c0-2-5-3-22-3l-17%201m81%202c1%202%202%203%203%202l1%201%202%201%201%201%201%201h1l-1%201v3h1l1-2v2l-1%202-1%202h2l2-1-2%202c-3%201-3%209%200%2018a3222%203222%200%200120%2062l30-4c9-1%2010-1%2010%201%201%201%201-4%201-11l-1-9-1%205v5c2%200%201%206-1%206-1%201-1%200-2-2l-2-3-1-1c0-2-8-13-10-14l-2-1%208-5%204-2c4-3%207-4%207-1%201%201%201-2%201-6l-1-9v-2l1-13c0-10-1-13-2-13l-2-1%201-1c3%200%204-8%202-17h-17v4c-1-1-1-1-1%201v1h-1c0%201-2%200-5-3l-3-3h-21l-1%204v12l-1%207v1c0%203%200%205-2%206-2%204-2%204-4-1-1-3-1-4%202-6%203-3%203-3%203-10l1-10c1-3%201-3-1-3l-2%202c-1%201-5%202-5%200l-2-2c-2%200-3%201-2%202h-1l-3%201c-1%201-1%201-2-1-2-3-3-2-2%201m24-1l1%201%201%201-2%201-2%201c0%202%200%202%202%202%201-1%202-1%201%201v5l-1%204h-1l2%201%201%203-1-1c-3-2-3-1-2%204l3%203%203%202c1%203%201%203-1%203l-1%201%201%201v1l1%201h3l-1%201-1%201%201%201h3l-1%201-2%201%202%201%202%201h2l1-3h-3l2-1v-3c-1-2-1-2-3-1l-2%201%201-2c2%200%201-2-1-2v-1c3%200%202-4-1-3-2%200-3-1%200-2%202-2%200-6-3-6v-1c4-1%203-4%200-3-2%200-2%200%200-2v-2l-1-1h2l1-2c0-1%200-2-1-1l-2-1h1l1-1c0-1%200-2%201-1%202%201%201-1-1-3s-5-3-5-1M13%204L1%205v5c0%206%200%206%205%200l5-5-4%207-6%207v14c0%2014%200%2016%205%2015l1%201c-1%201%200%203%202%205l5%209-6-7-7-6v7l1%207%201%201-1%201-2%202%201%202v15l1%2016c2%201%203%200%201-2-1-1-1-1%201-1%201%200%202%201%202%203l-1%202c-2-2-1%201%202%204%204%203%205%204%204%202%200-1%200-2%202-1l2%202h-2c-1%200%200%202%203%204s4%204%203%204c-1%201-9-5-15-11l-4-5v4c0%203%200%204%202%204%201-1%201-1%200%200l-1%203c-1%205-1%206%201%206h3c1%202%201%202-2%201H0v5c0%204%200%205%202%205l2%202H0l1%201v2l-1%2010v9l21-1%2028-1h6v-8l1-21c-1-4-2%208-2%2017v11H32l-6%201v-3l1-4c1-1%200-3-2-5l-2-5-1-2h-1l-4%206-2%206v3c-1%201-1%201-1-1s0-2-3%201l-4%204a404%20404%200%200015-25c8-11%2016-21%2017-19%200%202%203%201%204-1s1-2-1-2h-1c2-2%202-2-1-6-2-3-7-7-7-5l-1%201-1%201-2%202h-1c1%200%200%202-2%203-3%204-6%203-7-3%200-3%200-3%201-2h1a28%2028%200%20011-5c0-1%201-2%203-2%203%200%204-1%202-2l4-6%206-4v-1l5-6%205-6c0-1%206%202%207%204h3v2h-1l-1%202-4%204-4%202c-2%201%205%201%209-1l3-2V60a904%20904%200%20014-54c0-3%200-3-2-3s-2%200-1%201v14c-2-1-2-6-1-7V6l-1-3H41L13%204m17%201c-5%200-5%200-7%205l-7%209c-4%205-4%206-1%206s14%207%2014%209l2%202%201%201-1%201-2%201%203%201%204-1c1%200%201-1-1-1v-3l2-2%202-1c2%200%202%200%201%201-2%201-2%201%200%201h3c1-1%201-2-2-3l-3-1%202-3c5-6%207-16%203-14l-2-1c0-2%201-2%202-2%203%201%204-2%202-4-1-1-7-2-15-1m175%203l2%201c-1%202-5%202-5%201h-1v7l4%202c2%200%202%200%201-1v-2c3%200%205%201%203%202-1%201-1%201%201%201s5-2%205-4c1-4%200-5-3-4-3%200-3%200-3-2%201-2%200-2-2-2s-3%200-2%201M86%2011a780%20780%200%20000%2021c1%200%203-1%203-3l1-2%202%202c2%203%208%203%2011%200s2-7-3-8l-2-1%203-1%204-2v-1c-2-3-3-2-6%201-3%202-3%202-3%200%202-3-1-6-6-6h-4m82%209c-6%204-10%207-7%206%201-1%203%201%206%203%205%205%206%205%201%200l-3-5%201%201%206%201h5v-4c0-3-2-6-3-5l-6%203M53%2022c-1%202-2%203-2%207%200%205%201%205%202%201%201-3%201-3%201%200l-2%207c-1%205-1%206%201%207%202%202%202%202%203%200l1-8V25c-1-6-1-6-4-3m213%206a45%2045%200%2000-23%2022l-4-2c-13-8-26%208-18%2023%203%205%203%207%200%207-4%201-5%204-2%206%204%203%2010%202%209-2-1-1%200-3%201-4l1-9c0-7%201-10%204-10%202-1%202-1%200-1l-4%201c-1%202-2-1-2-6%201-5%203-6%207-5s10%206%2010%207c0%202-5%206-5%205l-3-1%201%202%202%204%201%205c0%204%200%204-3%204-5%201-6%203-2%207%203%204%206%205%203%201-2-1-2-2-2-3%201-1%205%205%205%208-1%202%201%205%203%205%201%200%202%202%202%205l1%206c1%202-7%205-14%205l-6%201c0%203%205%205%2012%205%204%200%204%200%203%202l-1%202%202-2%202-1-2%204c-3%205-3%207-1%2011%203%204%203%204%207-2l10-11c1%200%202%201%202%203l13%2016c2%200%202-14%200-20l3%201%2020%208c0-1-2-4-6-7-5-6-5-6-2-5l14-3%202%201%202-1h4l3-1c1-2%201-2-2-2-3%201-4-3-1-4%202%200%202%200%201%202-1%201-1%201%201%201h2l1%201v-3c-1-3-7-3-8%200s-9%203-20%202c-11-2-11-1-10-8%200-4%201-5%202-5s3-1%204-4l5-6c4-5%202-10-4-7-2%201-2%201-2-1%203-7%203-16%201-17-3-2-3-1-2%201%203%203%202%2012-1%2010-1-2-1-4%201-4v-2h-2c-2%202-3%201-1-1s0-3-2%200h-24c-3%201-4%200%200-1%202-1%203-5%201-5l-1%202v1l-1-1-1-1-1%202c1%201%201%201-1%201-1-1-2-1-1%201l1%202-1%202-1%202v2l-1%204c1%202%201%202%202%200%202-5%203-5%207%200%205%205%205%203%201-3-3-3-4-4-6-4-3%201-3%200%201-1%205-3%208-3%208-1%200%206%204%206%205%201%200-2%201-2%204-2%207%200%2012%206%2014%2013l1%203-1%205c-2%204-2%206%200%203l4-5c2-2%202-3%200-4-1-1-1-1%201-1%203%200%203%203-1%208-2%202-4%204-6%204s-3%200-3%206c-2%207-5%2012-8%2013l-3%202c-1%202-6%201-8-1l-4-2c-3-1-6-6-6-12-1-7-2-8-4-7l-2-1v-4c-1-1-2-3-1-4l-3-2c-2%200-2-1-1-1l4%201c2%201%202%201%202-1l2-5c2-4%201-5-1-2s-3%203-3-2c-2-11%2017-19%2032-13h4c0-2%207-9%209-9%203%200%204%208%202%209l-2%202h2c1-2%201-2%204%205l4%2010c2%203%203%204%202%205-2%201%200%205%203%206%203%200%207-3%206-5-1-3-3-2-2%200%200%201%200%202-1%201-1-2-2-1-1%201%200%202-1%203-3%201-1-2%200-5%203-5v-1l1-8c2-11-1-18-10-22-5-2-8-2-13%202l-3%201-1%203c-1%202-1%202-11%200-3%200-5-5-5-11%200-7%205-11%2010-9%203%200%205%202%203%202v1l2%203c-1%201%200%201%201%201l3%202%201%202c2%200%201-3-1-4l-2-4c0-4-8-7-13-5M98%2039c-2%205-6%208-10%208s-4%200-4%203c0%202%201%203%202%201s8-3%208-1l-7%203v3h3c2-3%2013-9%2015-9%202%201%202-1%201-3-2-1-2-1-4%201-4%203-7%203-4-1l3-2c2%201%202-1%200-3s-2-2-3%200m258%2011h-2c-1-2-3%200-2%203%201%202%201%202-2%201-2-1-2-1%200%206l1%205%203-3c2-2%203-3%204-2l2%201V48c0-1-3%200-4%202m5%2013l-1%201h-2c0%201%203%204%206%204%203%201%204%204%201%205-1%200-2%201-2%203l-1%202-2-1h1v-3h-1c0%202%200%202-2%201-3-1-3-2-1-3%201-1%201-1-1-1-3%200-3%202%201%2015l4%2011%205-1h7c2-1%201-7-1-11s-2-4%200-6l2-1%201-1c0-2-9-11-11-11v-1l1-2h-4M118%2076c-6%203-11%2020-9%2028l1%205-5%201c-12%200-16%208-10%2021l9%209c7%204%207%204%206%206-4%203-2%207%203%207%202%200%203%200%202-1l-1-2-1-2-1%202-1%202c-2-2-1-5%201-6%204%200%205%201%205%204v2c2-1%202-5%201-6l-2-3c0-3-5-11-8-13-2-3-3-5-1-7v-1l-2%202c0%203-1%202-4-1-6-8-2-14%2010-11%205%201%205%201%205%204l-1%204-4%201c-3%200-3%200%200%201%201%200%204%201%205%203%204%202%205%202%203-1-6-6%202-21%2014-25%205-2%2017-3%2019-1l6%209c-1%201-6-2-5-3%201-2%200-5-2-4l-1%203c1%202%200%202-3%202-6%200-20%208-20%2011l3-1%203-3%201%203c2%202%204%203%206%201v-3c-4-3%200-6%207-6%205%200%209%202%2013%206%203%202%203%202%204%201h1l3%2011c1-1%200-11-1-13-1-1-1-1%201-1%202%201%203%2015%200%2014-3%200-2%201%201%208s4%2013%202%2015l-2%203c0%203-2%204-9%204-8-1-10-2-18-9l-5-4-3%202v-1l-1-2v1c0%201-3%201-7-2h3c3%201%204%200%201-1l-2-2-3-1c-2%200-2%200-1-1h3c2%200%202%200%201-2-2-4-3-10-2-14v-1l-2%207-1%204v2c2%201%201%202-1%203-4%201-4%205%200%207a261%20261%200%200116%205c2%200%204%202%207%205%205%204%205%204%204%207-4%206-19%2016-20%2012%200-2-4-3-6-2-1%200-1%201%202%201%202%200%203%201%203%203s1%202%202%201h9c-3%200-3%200%203-2l8-3%202%201v1l1%204%205%2012-2-7-2-8-1-3c-1%200-1-1%201-1%201-2%202-2%202%204%201%206%206%2017%208%2018%201%200%203-7%203-15l1-11v-3l4%202c6%203%2020%208%2021%207l-1-2v-5h-1c0%201-2%200-5-4l-5-6h6c10-1%2018-3%2018-4l-9-3c-7-1-10-3-7-3%202%200%208-5%2011-8l3-4c1%201-3%207-7%2010l-2%203c2%200%208-6%2010-10l3-6c3-2%202-7-2-7-3%200-5%203-5%205%201%202-3%206-10%209l-15%206c-4-5-6-11-5-11%203-2%202-17%200-19s-6-1-6%201-2%201-4-4l-5-8c-3-4-3-9%200-9l1%201%201%201h1v1h1c-1%201%207%207%2012%209l4%203c1%205%209%205%209-1%200-2-3-4-6-3l-4-7c-6-12-11-16-21-16-8%200-11%202-13%208%200%202-1%203-2%203l-4-2h-2l2-1c2-1%202-1%201-3l-2-1v3c-4%200-3%203%201%203%205%202%208%207%203%208l-5%202c-5%201-7%200-13-8-5-7-2-14%205-14%203%200%205%202%203%202v1c1%200%202%201%202%203l1%203v-2c0-3%202-4%204-3l2-1-3-1-2-1c0-3-9-4-13-1m25%209v10l5%201c2%200%203%200%203-3l1-5v-3c-1%201-3%200-5-1l-3-2-1%203m126-1v3l-2%203c0%203-5%203-6%200-2-4-5-8-5-6s-1%202-2%202h-3l3%201c3%200%204%201%206%204l1%204c-1%200-6-3-6-5l-1-1c-1%200-2%203-1%204l2%205%204%207c4%203%204%203%207%202%204-3%2010-14%208-17h-1l-3%204c-4%202-6%203-4%200l3-4c0-2%201-2%204-2h3l1%201v-4l-2%201h-3l-2-3c-1-1-1-1-1%201m105%2025h-3c-3%200-3%200-4%202-1%203-5%204-6%201v-1l-8%201h-10c-2%200-2%200-2%2010%200%2012%200%2012%206%209%203-2%204-2%204-1l1%202-1%202c-3%206%205%2012%209%206l2-1%201-2-1-2%202%202%202%202v-3l-1-3-1-2c0-3-2-2-2%200h-2c-3-3-2-4%202-5l3-1v1l3-1%201-1%202-2c2%200%202-3-10%2038l-4%2014c-1%205-2%205-10%203-4-2-6-2-5-1%201%202%2014%204%2015%203a442%20442%200%200019-63l3-8h-3l-2%201m24%2016a2649%202649%200%2001-15%2061c3-4%208-5%2012-2%205%203%207%204%205%201v-39l-3-1c-2%200-2%200-1-1%202%200%203-4%201-4-1-1-1-1%201-1%202%201%202%201%202-9v-10l-2%205m-363-1l2%204h-1c-4-3-11%200-11%205%200%204%209%2017%2012%2017l7-7c8-8%209-13%205-16h-6c-1%202-3%201-3%200l2-3c0-2-1-2-4-2s-3%200-3%202m119%202l1%201%201%205c1%205-1%208-4%205l-4-2-4-3c-1-1-1-1-1%201%201%203%201%203-1%204l-1%201%204-1h4l5%202%203%202h-5l-6-1c-1-1-1-1-1%201l1%202%204%203%207%204%208%201%201-2c2-2%200-18-3-19v1l-2%205-1%204-1-3-1-5v-3c2%200%202-1%200-2-3-2-4-2-4-1m-94%2011c-3%200-4%202-2%202v7c0%208%201%2011%205%2011%203%200%205-2%205-5l1-5c1-3-3-11-5-11l-4%201m285%209h-2l-1%2012%201%2012%2011-6%203-2-5-8c-4-9-5-10-7-8m24%209l-4%202%202%203c3%206%203%206%2011%201%201%200-2-8-4-8%200-1-3%200-5%202m-48%204l1%201%202%201-1%203c-2%201-3%201-3-1l-1-1v3c1%203%201%203%203%202%201-1%202-1%203%201%204%203%201%204-3%201h-1c0%201%203%203%207%203%203%200%206-2%206-3l-2%201c-3%201-3%201-3-1s0-2%203-2c2%201%203%200%203-1l-1-1c-2%201-3-2-2-4s0-3-2-1h-4c-3-2-5-2-5-1m-243%203l-3%204H62l-14%201h-2c-1%202-3%203-2%201l-1-2-1%202c-1%202-1%202-1%200%200-1-1-2-13-1-17%200-27%203-27%207%200%202%200%202%203%202a344%20344%200%200114-4l22-4c1%202-1%202-20%207l-17%205c3%200%202%201%200%204s-3%205-1%205l1-1h3l31%201h30l6-3%206-3v3c0%203%203%204%204%202h2l2%201%201-1h2l5%201h5l-8-12a319%20319%200%2000-11-17s-2%200-3%202m284%205l1%202-1%206c-3%208-2%2012%203%2012%203%200%205-1%206-6l1-3c2-1%201-8%200-9l-4-2-4-1-2%201'%20fill='%233f51b5'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":2.123076923076923,"src":"/static/62d1fc5f87910dbe41bbb9f0f6fbfa17/dee3b/joker-card-toni-reed-VupdxmowTDg-unsplash.jpg","srcSet":"/static/62d1fc5f87910dbe41bbb9f0f6fbfa17/f81b6/joker-card-toni-reed-VupdxmowTDg-unsplash.jpg 138w,\n/static/62d1fc5f87910dbe41bbb9f0f6fbfa17/cf463/joker-card-toni-reed-VupdxmowTDg-unsplash.jpg 275w,\n/static/62d1fc5f87910dbe41bbb9f0f6fbfa17/dee3b/joker-card-toni-reed-VupdxmowTDg-unsplash.jpg 550w,\n/static/62d1fc5f87910dbe41bbb9f0f6fbfa17/c1303/joker-card-toni-reed-VupdxmowTDg-unsplash.jpg 825w,\n/static/62d1fc5f87910dbe41bbb9f0f6fbfa17/42364/joker-card-toni-reed-VupdxmowTDg-unsplash.jpg 1100w,\n/static/62d1fc5f87910dbe41bbb9f0f6fbfa17/c033a/joker-card-toni-reed-VupdxmowTDg-unsplash.jpg 4288w","srcWebp":"/static/62d1fc5f87910dbe41bbb9f0f6fbfa17/25338/joker-card-toni-reed-VupdxmowTDg-unsplash.webp","srcSetWebp":"/static/62d1fc5f87910dbe41bbb9f0f6fbfa17/c6300/joker-card-toni-reed-VupdxmowTDg-unsplash.webp 138w,\n/static/62d1fc5f87910dbe41bbb9f0f6fbfa17/88818/joker-card-toni-reed-VupdxmowTDg-unsplash.webp 275w,\n/static/62d1fc5f87910dbe41bbb9f0f6fbfa17/25338/joker-card-toni-reed-VupdxmowTDg-unsplash.webp 550w,\n/static/62d1fc5f87910dbe41bbb9f0f6fbfa17/6d9da/joker-card-toni-reed-VupdxmowTDg-unsplash.webp 825w,\n/static/62d1fc5f87910dbe41bbb9f0f6fbfa17/5c86c/joker-card-toni-reed-VupdxmowTDg-unsplash.webp 1100w,\n/static/62d1fc5f87910dbe41bbb9f0f6fbfa17/99bdc/joker-card-toni-reed-VupdxmowTDg-unsplash.webp 4288w","sizes":"(max-width: 550px) 100vw, 550px"}}},"heroAlt":"Joker cards sitting on a bed of cards"},"fields":{"slug":"/quick-trick-jest-asynchronous-tests/"},"excerpt":"Two weeks ago I wrote a post on Asynchronous testing with Enzyme & React in Jest. It covered the challenge of testing an async React…"}},{"node":{"id":"12d0b073-ec00-5196-b1e4-a479e5a0f4db","frontmatter":{"title":"Asynchronous testing with Enzyme & React in Jest","shortDescription":"How to use Enzyme to test UI updates after asynchronous events in React components","tags":["react","async","enzyme","react-testing-library"],"date":"July 15, 2020","hero":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='183'%20viewBox='0%200%20400%20183'%20preserveAspectRatio='none'%3e%3cpath%20d='M104%202c-5%203-5-1-4%2066a2010%202010%200%2001-3-57l-1%2064%201%2063%202%203c3%204%203%205%203%2010-1%205-1%206%202%208%202%202%203%206%202%209v2l1-1%202-2v-4l-1-2h23c1%201-8%2011-10%2011-1%200-3%203-3%205s1%202%202-1c3-3%204-4%204-1%200%202%201%201%202-2%200-3%202-5%204-4l2-1c0-5%202-7%208-7h5l1%205c1%208%202%207%202-1%200-3%201-4%204-4s4%200%201%203c-1%203-2%2014-1%2017%200%202%205%202%20100%202a1132%201132%200%2000126-1l11%201h11V0h-24c-22%200-25%200-25%202l-1%201-1-1c0-2-1-2-4-2s-3%200-2%201c2%202%202%203%202%205v4c1%200-3%203-5%203l-4%202-9%203a490%20490%200%2001-70%2019c-8%200-8%200-9-10-2-11-5-13-20-15l-11-1V7c0-3-3-4-4-1%200%202-1%202-2%201s-1-1-1%201c0%203%202%203-28-1-18-1-25-3-27-4h-4c-1%202-17%200-19-2h-2c0%201-3%202-3%200%200-1-20-1-23%201m178%203l-7%206-3%203-1%206c-3%206-3%2013-1%2013%206%200%2010-3%2035-27l7-6h-25l-5%205m64%2026h-6l-38%209a156%20156%200%2000-36%2013c-3%201-3%201-3%204%201%204%200%206-4%207l-4%202-1%203c-1%201%200%206%201%2013v3h6c4%200%205-1%205-2l3-1c3%200%203%200%202%201-2%201-2%201%202%201%203%200%203-1%203-2v-2l4%201%207%202%205%201%201-1-2-8v-6l3-3c5-3%206-2%202%202-3%203-3%204-2%209%200%206%202%208%205%206%203-3%204-2%201%200-2%202-2%204-2%206%201%204%201%204-2%205-2%200-2%201-1%204%200%205%201%205%203%202l4-2c2%200%202%201-2%204l-4%203%201%205%201%2010%201%205%204-4c4-2%205-3%206-2l-3%205-4%203%201%206c1%207%201%207%205%205%203-1%204-1%202%202-2%201-2%204-3%208l-2%208c-1%201%200%2015%202%2018%201%202%2047-8%2056-13%203-1%204-2%203-4l1-2%201%202c0%202%201%202%202%202%202-1%202-7%201-12-1-2-1-3%202-4%202%200%204-1%204-3l-5-31a13818%2013818%200%2001-15-72c0%202-2%203-4%203s-4-4-4-8c0-2-2-3-3-1m-19%208l-3%203%201%207%203%2014c2%2010%204%2011%204%201v-7l-1-1c-2%200-3-1-3-5l-1-6c-1-1%200-3%202-5%205-5%203-6-2-1M147%2065l-1%203-1%202-1%201c-1%203-4%203-8%202s-7%201-6%204l-3%201c-3%200-4%200-6%202l-2%202-2-2-2-3v15l4%205c2%202%202%204%202%2011l2%2010%2013%201%2012%201v-4l-1-5v-2l-1-2c-1%201-2%200-2-1l1-1-1-2h-2l-2%201%201-2v-2l-4-3-2-2%202-4c2-5%203-5%208%203%204%205%204%206%205%204%202-3%202-5%200-5s-2%200%200-1l3-1-3-1-2-1-2-2c-3-1-3-1-2-2l1-5%202-6v-2l1-1c1-1%202-6%200-7l-1%201m191%2031c-4%203-4%203%200%2023%203%2014%203%2014%205%2012l1-7v-9c3-3%202-5-1-4l-3%201c-1-1%202-6%203-5l1-1-1-2c-4%201-6-2-3-6%205-4%203-6-2-2m-21%2015c-3%203-4%204-4%206a11161%2011161%200%20017%2030l1-6a253%20253%200%2001-2-11l-2-7-1-6%204-4c6-5%204-7-3-2m-84%2050l-4%203h-11a1757%201757%200%2001-34%200c0%202%205%204%207%204%201-1%202%200%202%201l3%202a277%20277%200%200139%206l5%201-1-9c-1-12-1-12-6-8'%20fill='%233f51b5'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":2.1904761904761907,"src":"/static/e36a2f4ea19f9b1b3a1c89adec393208/dee3b/wait-sign-kai-pilger-1k3vsv7iIIc-unsplash.jpg","srcSet":"/static/e36a2f4ea19f9b1b3a1c89adec393208/f81b6/wait-sign-kai-pilger-1k3vsv7iIIc-unsplash.jpg 138w,\n/static/e36a2f4ea19f9b1b3a1c89adec393208/cf463/wait-sign-kai-pilger-1k3vsv7iIIc-unsplash.jpg 275w,\n/static/e36a2f4ea19f9b1b3a1c89adec393208/dee3b/wait-sign-kai-pilger-1k3vsv7iIIc-unsplash.jpg 550w,\n/static/e36a2f4ea19f9b1b3a1c89adec393208/c1303/wait-sign-kai-pilger-1k3vsv7iIIc-unsplash.jpg 825w,\n/static/e36a2f4ea19f9b1b3a1c89adec393208/42364/wait-sign-kai-pilger-1k3vsv7iIIc-unsplash.jpg 1100w,\n/static/e36a2f4ea19f9b1b3a1c89adec393208/6a059/wait-sign-kai-pilger-1k3vsv7iIIc-unsplash.jpg 6000w","srcWebp":"/static/e36a2f4ea19f9b1b3a1c89adec393208/25338/wait-sign-kai-pilger-1k3vsv7iIIc-unsplash.webp","srcSetWebp":"/static/e36a2f4ea19f9b1b3a1c89adec393208/c6300/wait-sign-kai-pilger-1k3vsv7iIIc-unsplash.webp 138w,\n/static/e36a2f4ea19f9b1b3a1c89adec393208/88818/wait-sign-kai-pilger-1k3vsv7iIIc-unsplash.webp 275w,\n/static/e36a2f4ea19f9b1b3a1c89adec393208/25338/wait-sign-kai-pilger-1k3vsv7iIIc-unsplash.webp 550w,\n/static/e36a2f4ea19f9b1b3a1c89adec393208/6d9da/wait-sign-kai-pilger-1k3vsv7iIIc-unsplash.webp 825w,\n/static/e36a2f4ea19f9b1b3a1c89adec393208/5c86c/wait-sign-kai-pilger-1k3vsv7iIIc-unsplash.webp 1100w,\n/static/e36a2f4ea19f9b1b3a1c89adec393208/3041e/wait-sign-kai-pilger-1k3vsv7iIIc-unsplash.webp 6000w","sizes":"(max-width: 550px) 100vw, 550px"}}},"heroAlt":"Wait crosswalk sign in New York City"},"fields":{"slug":"/asynchronous-testing-with-enzyme-react-jest/"},"excerpt":"Back in April I wrote a blog post about how I would choose React Testing Library over Enzyme. It’s probably been my most popular post in the…"}}]},"site":{"siteMetadata":{"author":{"name":"Ben Ilegbodu"}}}},"pageContext":{"slug":"/mocking-window-location-methods-jest-jsdom/","previousSlug":"/new-gatsby-blog/","nextSlug":"/microsoft-mvp/","category":"Testing"}},"staticQueryHashes":["2495720375","307212292","4260024542","520305385","58428228"]}