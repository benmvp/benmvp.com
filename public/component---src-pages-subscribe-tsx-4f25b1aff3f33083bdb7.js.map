{"version":3,"sources":["webpack:///./src/components/PageHeader.tsx","webpack:///./src/pages/subscribe.tsx","webpack:///./src/utils/generate-social-image.ts"],"names":["PageHeader","_ref","className","subTitle","title","React","createElement","Box","component","Typography","variant","gutterBottom","useStyles","makeStyles","theme","createStyles","header","marginBottom","spacing","promise","marginTop","textAlign","PAGE_TITLE","PAGE_DESCRIPTION","PAGE_URL","getUrl","SEO_IMAGE_URL","generateSocialImage","tagline","Subscribe","classes","Layout","includeSubscribe","Seo","url","description","image","imageAlt","GatsbyLink","href","my","pl","maxWidth","mx","mt","SubscribeForm","Share","summary","escape","text","encodeURIComponent","date","imagePublicID","version","titleFont","taglineFont","imageWidth","imageHeight","textAreaWidth","textLeftOffset","titleTopOffset","taglineBottomOffset","textColor","titleFontSize","taglineFontSize","imageConfig","join","titleConfig","taglineConfig","dateConfig","urlParts","validParts","filter","Boolean"],"mappings":"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","file":"component---src-pages-subscribe-tsx-4f25b1aff3f33083bdb7.js","sourcesContent":["import React from 'react'\nimport { Typography, Box } from '@material-ui/core'\n\ninterface Props {\n  className?: string\n  subTitle?: string\n  title: string\n}\n\nconst PageHeader = ({ className, subTitle, title }: Props) => {\n  return (\n    <Box component=\"header\" className={className}>\n      <Typography variant=\"h3\" component=\"h1\" gutterBottom>\n        {title}\n      </Typography>\n      {subTitle && (\n        <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n          {subTitle}\n        </Typography>\n      )}\n    </Box>\n  )\n}\n\nexport default PageHeader\n","import React from 'react'\nimport { createStyles, makeStyles, Box, Typography } from '@material-ui/core'\nimport { Link as GatsbyLink } from 'gatsby-theme-material-ui'\nimport Layout from '../components/Layout'\nimport Seo from '../components/Seo'\nimport PageHeader from '../components/PageHeader'\nimport SubscribeForm from '../components/SubscribeForm'\nimport Share from '../components/Share'\nimport { getUrl } from '../utils'\nimport generateSocialImage from '../utils/generate-social-image'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    header: {\n      marginBottom: theme.spacing(5),\n    },\n    promise: {\n      marginTop: theme.spacing(4),\n      marginBottom: theme.spacing(4),\n      textAlign: 'center',\n    },\n  }),\n)\n\nconst PAGE_TITLE = 'Subscribe to the BenMVP Newsletter'\nconst PAGE_DESCRIPTION =\n  'Get notified about new web frontend development blog posts, upcoming minishops & other goodies by Ben Ilegbodu'\nconst PAGE_URL = getUrl('subscribe')\nconst SEO_IMAGE_URL = generateSocialImage({\n  title: PAGE_TITLE,\n  tagline: PAGE_DESCRIPTION,\n})\n\nconst Subscribe = () => {\n  const classes = useStyles()\n\n  return (\n    <Layout includeSubscribe={false}>\n      <Seo\n        url={PAGE_URL}\n        title={PAGE_TITLE}\n        description={PAGE_DESCRIPTION}\n        image={SEO_IMAGE_URL}\n        imageAlt={PAGE_TITLE}\n      />\n      <PageHeader className={classes.header} title={PAGE_TITLE} />\n      <Typography variant=\"body1\">\n        The <strong>BenMVP Newsletter</strong> is a weekly<em>-ish</em> frontend\n        web development newsletter by{' '}\n        <GatsbyLink href=\"/about/\">Ben Ilegbodu</GatsbyLink>. ðŸ˜„\n      </Typography>\n\n      <Box component=\"ul\" my={4} pl={4}>\n        <Typography component=\"li\">\n          I blog a lot about JavaScript, React, TypeScript,{' '}\n          <GatsbyLink href=\"/blog/what-divops-engineer/\">\n            &quot;DivOps&quot;\n          </GatsbyLink>{' '}\n          and other related web frontend technologies based on what I'm learning\n          or questions that I'm asked.{' '}\n          <strong>Get notified of my new blog posts</strong> when they are\n          published.\n        </Typography>\n        <Typography component=\"li\">\n          I host short 3.5-hour workshops (called{' '}\n          <GatsbyLink href=\"/minishops/\">minishops</GatsbyLink>) on React and\n          TypeScript. <strong>Find out about upcoming minishops</strong> when\n          they are released to ensure you get the best price possible.\n        </Typography>\n        <Typography component=\"li\">\n          I <GatsbyLink href=\"/speak/\">speak</GatsbyLink> at conferences &amp;\n          meetups, join in on podcasts, and will do the occasional livestream.{' '}\n          <strong>Stay up to date with future events and videos</strong>.\n        </Typography>\n      </Box>\n\n      <Box maxWidth=\"500px\" mx=\"auto\" mt={4}>\n        <SubscribeForm />\n        <Typography variant=\"body2\" className={classes.promise}>\n          I will <strong>not</strong> sell your email address to spammers (or\n          anyone), I promise.\n        </Typography>\n\n        <Share url={PAGE_URL} title={PAGE_TITLE} summary={PAGE_DESCRIPTION} />\n      </Box>\n    </Layout>\n  )\n}\n\nexport default Subscribe\n","interface Config {\n  title: string\n  tagline?: string\n  date?: string\n  imagePublicID?: string\n  cloudName?: string\n  version?: string | null\n  titleFont?: string\n  taglineFont?: string\n  imageWidth?: number\n  imageHeight?: number\n  textAreaWidth?: number\n  textLeftOffset?: number\n  titleTopOffset?: number\n  taglineBottomOffset?: number\n  textColor?: string\n  titleFontSize?: number\n  taglineFontSize?: number\n}\n\nconst escape = (text: string): string =>\n  encodeURIComponent(encodeURIComponent(text))\n\nconst generateSocialImage = ({\n  title,\n  tagline,\n  date,\n  imagePublicID = 'benmvp/blog-post-template_gkpzgc',\n  version = 'v1619329795',\n  titleFont = 'roboto',\n  taglineFont = 'roboto',\n  imageWidth = 1280,\n  imageHeight = 669,\n  textAreaWidth = 666,\n  textLeftOffset = 550,\n  titleTopOffset = 64,\n  taglineBottomOffset = 64,\n  textColor = 'ffffff',\n  titleFontSize = 70,\n  taglineFontSize = 40,\n}: Config): string => {\n  // configure social media image dimensions, quality, and format\n  const imageConfig = [\n    `w_${imageWidth}`,\n    `h_${imageHeight}`,\n    'c_fill',\n    'q_auto',\n    'f_auto',\n  ].join(',')\n\n  // configure the title text\n  // starts at the top and grows downward\n  const titleConfig = [\n    `w_${textAreaWidth}`,\n    'c_fit',\n    `co_rgb:${textColor}`,\n    'g_north_west',\n    `x_${textLeftOffset}`,\n    `y_${titleTopOffset}`,\n    `l_text:${escape(titleFont)}_${titleFontSize}_bold:${escape(title)}`,\n  ].join(',')\n\n  // configure the tagline text\n  // starts at the bottom and grows upward\n  const taglineConfig = tagline\n    ? [\n        `w_${textAreaWidth}`,\n        'c_fit',\n        `co_rgb:${textColor}`,\n        'g_south_west',\n        `x_${textLeftOffset}`,\n        `y_${taglineBottomOffset}`,\n        `l_text:${escape(taglineFont)}_${taglineFontSize}_light:${escape(\n          tagline,\n        )}`,\n      ].join(',')\n    : ''\n\n  // configure the date text\n  // beneath the logo\n  const dateConfig = date\n    ? [\n        `w_350`,\n        'c_fit',\n        `co_rgb:${textColor}`,\n        'g_south_west',\n        `x_64`,\n        `y_64`,\n        `l_text:${escape(taglineFont)}_${taglineFontSize}:${escape(date)}`,\n      ].join(',')\n    : ''\n\n  // combine all the pieces required to generate a Cloudinary URL\n  const urlParts = [\n    imageConfig,\n    titleConfig,\n    taglineConfig,\n    dateConfig,\n    version,\n    imagePublicID,\n  ]\n\n  // remove any falsy sections of the URL (e.g. an undefined version)\n  const validParts = urlParts.filter(Boolean)\n\n  // join all the parts into a valid URL to the generated image\n  return `https://res.cloudinary.com/benmvp/image/upload/${validParts.join(\n    '/',\n  )}`\n}\n\nexport default generateSocialImage\n"],"sourceRoot":""}